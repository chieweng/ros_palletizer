<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="test_robot">
<!-- robot name parameter -->
<xacro:arg name="name" default="ur"/>
<xacro:arg name="use_nominal_extrinsics" default="false"/>
<xacro:arg name="add_plug" default="false" />
<xacro:arg name="use_mesh" default="true" />
<!-- import main macro -->
<xacro:include filename="$(find ur_description)/urdf/ur_macro.xacro"/>
<xacro:include filename="$(find realsense2_description)/urdf/_d435.urdf.xacro" />
<!-- possible 'ur_type' values: ur3, ur3e, ur5, ur5e, ur10, ur10e, ur16e, ur20, ur30 -->
<!-- the default value should raise an error in case this was called without defining the type -->
<xacro:arg name="ur_type" default="ur10e"/>

    <!-- parameters -->
    <xacro:arg name="tf_prefix" default="" />
    <xacro:arg name="joint_limits_parameters_file" default="$(find ur_description)/config/$(arg ur_type)/joint_limits.yaml"/>
    <xacro:arg name="kinematics_parameters_file" default="$(find ur_description)/config/$(arg ur_type)/default_kinematics.yaml"/>
    <xacro:arg name="physical_parameters_file" default="$(find ur_description)/config/$(arg ur_type)/physical_parameters.yaml"/>
    <xacro:arg name="visual_parameters_file" default="$(find ur_description)/config/$(arg ur_type)/visual_parameters.yaml"/>
    <xacro:arg name="transmission_hw_interface" default=""/>
    <xacro:arg name="safety_limits" default="false"/>
    <xacro:arg name="safety_pos_margin" default="0.15"/>
    <xacro:arg name="safety_k_position" default="20"/>
    <xacro:arg name="initial_positions_file" default="$(find ur_description)/config/initial_positions.yaml"/>
    <xacro:arg name="transmission_hw_interface" default=""/>
    <xacro:arg name="safety_limits" default="false"/>
    <xacro:arg name="safety_pos_margin" default="0.15"/>
    <xacro:arg name="safety_k_position" default="20"/>
    <!-- ros2_control related parameters -->
    <xacro:arg name="headless_mode" default="false" />
    <xacro:arg name="robot_ip" default="0.0.0.0" />
    <xacro:arg name="script_filename" default=""/>
    <xacro:arg name="output_recipe_filename" default=""/>
    <xacro:arg name="input_recipe_filename" default=""/>
    <xacro:arg name="reverse_ip" default="0.0.0.0"/>
    <xacro:arg name="script_command_port" default="50004"/>
    <xacro:arg name="reverse_port" default="50001"/>
    <xacro:arg name="script_sender_port" default="50002"/>
    <xacro:arg name="trajectory_port" default="50003"/>
    <!--   tool communication related parameters-->
    <xacro:arg name="use_tool_communication" default="false" />
    <xacro:arg name="tool_voltage" default="0" />
    <xacro:arg name="tool_parity" default="0" />
    <xacro:arg name="tool_baud_rate" default="115200" />
    <xacro:arg name="tool_stop_bits" default="1" />
    <xacro:arg name="tool_rx_idle_chars" default="1.5" />
    <xacro:arg name="tool_tx_idle_chars" default="3.5" />
    <xacro:arg name="tool_device_name" default="/tmp/ttyUR" />
    <xacro:arg name="tool_tcp_port" default="54321" />

        <!-- Simulation parameters -->
    <xacro:arg name="use_fake_hardware" default="false" />
    <xacro:arg name="fake_sensor_commands" default="false" />
    <xacro:arg name="sim_gazebo" default="false" />
    <xacro:arg name="sim_ignition" default="false" />
    <xacro:arg name="simulation_controllers" default="" />

    <!-- convert to property to use substitution in function -->
    <xacro:property name="is_sim_gazebo" value="$(arg sim_gazebo)"/>
    <xacro:property name="is_sim_ignition" value="$(arg sim_ignition)"/>
    <xacro:property name="initial_positions_file" default="$(arg initial_positions_file)"/>
    <!-- create link fixed to the "world" -->
    <link name="world" />

    <link name="platform">
        <visual>
        <geometry>
            <box size="0.485 0.735 0.97"/>
        </geometry>
        <material name="gray">
            <color rgba="0.5 0.5 0.5 1"/>
        </material>
        <origin xyz="0 0 -0.5" rpy="0 0 0"/>
        </visual>
        <collision>
        <geometry>
            <box size="0.485 0.735 0.97"/>
        </geometry>
        <origin xyz="0 0 -0.485" rpy="0 0 0"/>
        </collision>
    </link>

    <link name="camera_collision">
        <visual>
        <geometry>
            <box size="0.035 0.1 0.035"/>
        </geometry>
        <material name="camera_bounding_box">
            <color rgba="0.5 0.5 0.5 0.5"/>
        </material>
        <origin xyz="0 0 0.0125" rpy="0 0 0"/>
        </visual>
        <collision>
        <geometry>
            <box size="0.035 0.1 0.035"/>
        </geometry>
        <origin xyz="0 0 0.0125" rpy="0 0 0"/>
        </collision>
    </link>

    <link name="grasp_link"/>

    <!-- Fixed joint to attach the box to the world -->
    <joint name="platform_to_world" type="fixed">
        <parent link="world"/>
        <child link="platform"/>
        <origin xyz="0 0 0.97" rpy="0 0 0"/>
    </joint>

    <joint name="camera_collision_joint" type="fixed">
        <parent link="camera_bottom_screw_frame"/>
        <child link="camera_collision"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>

    <joint name="gripper_grasp_joint" type="fixed">
        <parent link="tool0" />
        <child link="grasp_link" />
        <origin xyz="0 0 0.14" rpy="0 0 0"/>
    </joint>  

   <!-- arm -->
   <xacro:ur_robot
        name="$(arg name)"
        tf_prefix="$(arg tf_prefix)"
        parent="platform"
        joint_limits_parameters_file="$(arg joint_limits_parameters_file)"
        kinematics_parameters_file="$(arg kinematics_parameters_file)"
        physical_parameters_file="$(arg physical_parameters_file)"
        visual_parameters_file="$(arg visual_parameters_file)"
        transmission_hw_interface="$(arg transmission_hw_interface)"
        safety_limits="$(arg safety_limits)"
        safety_pos_margin="$(arg safety_pos_margin)"
        safety_k_position="$(arg safety_k_position)"
        use_fake_hardware="$(arg use_fake_hardware)"
        fake_sensor_commands="$(arg fake_sensor_commands)"
        sim_gazebo="$(arg sim_gazebo)"
        sim_ignition="$(arg sim_ignition)"
        headless_mode="$(arg headless_mode)"
        initial_positions="${xacro.load_yaml(initial_positions_file)}"
        use_tool_communication="$(arg use_tool_communication)"
        tool_voltage="$(arg tool_voltage)"
        tool_parity="$(arg tool_parity)"
        tool_baud_rate="$(arg tool_baud_rate)"
        tool_stop_bits="$(arg tool_stop_bits)"
        tool_rx_idle_chars="$(arg tool_rx_idle_chars)"
        tool_tx_idle_chars="$(arg tool_tx_idle_chars)"
        tool_device_name="$(arg tool_device_name)"
        tool_tcp_port="$(arg tool_tcp_port)"
        robot_ip="$(arg robot_ip)"
        script_filename="$(arg script_filename)"
        output_recipe_filename="$(arg output_recipe_filename)"
        input_recipe_filename="$(arg input_recipe_filename)"
        reverse_ip="$(arg reverse_ip)"
        script_command_port="$(arg script_command_port)"
        reverse_port="$(arg reverse_port)"
        script_sender_port="$(arg script_sender_port)"
        trajectory_port="$(arg trajectory_port)"
     >
     <origin xyz="0 0 0" rpy="0 0 0" />          
   </xacro:ur_robot>

    <!--This will create the camera-->
    <xacro:sensor_d435 parent="flange" use_nominal_extrinsics="$(arg use_nominal_extrinsics)" add_plug="$(arg add_plug)" use_mesh="$(arg use_mesh)">
        <origin xyz="0 0 -0.1" rpy="3.14159 0 0"/>
    </xacro:sensor_d435>

</robot>
